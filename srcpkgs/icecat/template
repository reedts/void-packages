# Template file for 'icecat'
pkgname=icecat
version=68.7.0
revision=1
build_helper="rust"
hostmakedepends="autoconf213 unzip zip pkg-config perl python yasm
 python3 cargo llvm clang rust cbindgen nasm nodejs-lts-10 tar which"
makedepends="nss-devel libjpeg-turbo-devel gtk+-devel gtk+3-devel icu-devel
 pixman-devel sqlite-devel libevent-devel libnotify-devel libvpx5-devel
 libXrender-devel libXcomposite-devel libSM-devel libXt-devel rust-std
 libXdamage-devel $(vopt_if alsa alsa-lib-devel)
 $(vopt_if dbus dbus-glib-devel) $(vopt_if pulseaudio pulseaudio-devel)
 $(vopt_if startup_notification startup-notification-devel)
 $(vopt_if xscreensaver libXScrnSaver-devel) $(vopt_if sndio sndio-devel)"
depends="nss>=3.44.3 desktop-file-utils hicolor-icon-theme"
short_desc="GNU version of the Firefox browser"
maintainer="Jürgen Buchmüller <pullmoll@t-online.de>"
license="MPL-1.1, GPL-2.0-or-later, LGPL-2.1-or-later"
homepage="https://www.gnu.org/software/${pkgname}/"
distfiles="https://distfiles.voidlinux.de/${pkgname}-${version}/${pkgname}-${version}-gnu1.tar.bz2"
checksum=fcb3deb5a899c3396496694a7d1f8fb6e483dbb01aee9f26f862953cb727404b
lib32disabled=yes

build_options="alsa dbus gtk3 pulseaudio startup_notification sndio xscreensaver"
build_options_default="alsa dbus gtk3 pulseaudio startup_notification sndio xscreensaver"

case $XBPS_TARGET_MACHINE in
	armv6*) broken="required NEON extensions are not supported on armv6" ;;
	ppc64*) ;;
	ppc*) broken="xptcall bitrot" ;;
esac

if [ "$XBPS_TARGET_ENDIAN" = "be" ]; then
	broken="rendering is busted, dunno why"
fi

CXXFLAGS="-Wno-class-memaccess -Wno-unused-function"

if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
	makedepends+=" libatomic-devel"
fi
if [ "$XBPS_WORDSIZE" -eq 32 ]; then
	nodebug=yes
fi

# we need thi because cargo verifies s because cargo verifies checksums of all files in vendor
# crates when it builds and gives us no way to override or update the
# file sanely... so just clear out the file list
_clear_vendor_checksums() {
	sed -i 's/\("files":{\)[^}]*/\1/' third_party/rust/$1/.cargo-checksum.json
}

post_extract() {
	case "$XBPS_TARGET_MACHINE" in
	*-musl)
		cp "${FILESDIR}/stab.h" toolkit/crashreporter/google-breakpad/src/
		;;
	esac
}

post_patch() {
	_clear_vendor_checksums cssparser
}

do_build() {
	local triplet
	cp ${FILESDIR}/mozconfig .mozconfig

	case "$XBPS_TARGET_MACHINE" in
	*-musl)
		echo "ac_add_options --disable-jemalloc" >>.mozconfig
		echo "ac_add_options --disable-gold" >>.mozconfig
		echo "ac_add_options --enable-release" >>.mozconfig
		;;
	esac

	case "$XBPS_TARGET_MACHINE" in
	x86_64*|i686*|arm*)
		echo "ac_add_options --disable-elf-hack" >>.mozconfig
		;;
	esac

	# webrtc currently fails to build on 32-bit ppc...
	case "$XBPS_TARGET_MACHINE" in
	ppc64*) ;;
	ppc*) echo "ac_add_options --disable-webrtc" >>.mozconfig ;;
	esac

	if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
		export LDFLAGS+=" -latomic"
	fi

	if [ "$CROSS_BUILD" ]; then
		BINDGEN_INCLUDE_FLAGS=$( $CPP -x c++ -v /dev/null -o /dev/null 2>&1 | \
			sed -n '/#include <...> search starts here:/,/End of search list./p' | \
			sed '1,1d;$d' | sed  's/^ /-I/' | paste -s )

		export BINDGEN_CFLAGS="--target=$XBPS_CROSS_TRIPLET \
			--sysroot=${XBPS_CROSS_BASE} ${BINDGEN_INCLUDE_FLAGS}"
		export HOST_CC="${CC_host}"
		export TARGET_CC="${CC}"
		export HOST_CFLAGS="${XBPS_CFLAGS}"
		export HOST_CXXFLAGS="${XBPS_CXXFLAGS}"
		echo "ac_cv_sqlite_secure_delete=yes" >> .mozconfig
		echo "ac_cv_sqlite_threadsafe=yes" >> .mozconfig
		echo "ac_cv_sqlite_enable_fts3=yes" >> .mozconfig
		echo "ac_cv_sqlite_dbstat_vtab=yes" >> .mozconfig
		echo "ac_cv_sqlite_enable_unlock_notify=yes" >> .mozconfig
		echo "ac_cv_prog_hostcxx_works=1" >> .mozconfig
		echo "ac_add_options --target=$XBPS_CROSS_TRIPLET" >>.mozconfig
		echo "ac_add_options --host=$XBPS_TRIPLET" >>.mozconfig
	else
		echo "ac_add_options --target=$XBPS_TRIPLET" >>.mozconfig
		echo "ac_add_options --host=$XBPS_TRIPLET" >>.mozconfig
	fi

	mkdir -p third_party/rust/libloading/.deps

	case "$XBPS_TARGET_MACHINE" in
	armv7*)
		export CFLAGS+=" -mfpu=neon -Wno-psabi"
		export CXXFLAGS+=" -mfpu=neon -Wno-psabi"
		;;
	esac

	# work around large debug symbols on 32-bit hosts
	if [ "$XBPS_WORDSIZE" = "32" ]; then
		export CFLAGS="${CFLAGS/-g/-g1}"
		export CXXFLAGS="${CXXFLAGS/-g/-g1}"
		export LDFLAGS+=" -Wl,--no-keep-memory"
		# patch the rust debug level, this is hardcoded
		sed -i "s/debug_info = '2'/debug_info = '1'/" \
		build/moz.configure/toolchain.configure
	fi


	export LDFLAGS+=" -Wl,-rpath=/usr/lib/icecat"

	if [ "$SOURCE_DATE_EPOCH" ]; then
		export MOZ_BUILD_DATE=$(date --date "@$SOURCE_DATE_EPOCH" "+%Y%m%d%H%M%S")
	fi

	export MOZ_MAKE_FLAGS="${makejobs}"
	export MOZ_NOSPAM=1
	export MOZ_MAKE_FLAGS="${makejobs}"

	export AS=$CC

	cat >>.mozconfig <<EOF
ac_add_options $(vopt_enable alsa)
ac_add_options $(vopt_enable sndio)
ac_add_options $(vopt_enable dbus)
ac_add_options $(vopt_enable dbus necko-wifi)
ac_add_options $(vopt_enable pulseaudio)
ac_add_options $(vopt_enable startup_notification startup-notification)
EOF

	rm -f old-configure

	./mach build
}
do_install() {
	DESTDIR="${DESTDIR}" ./mach install

	vinstall ${FILESDIR}/vendor.js 644 usr/lib/icecat/defaults/pref
	vinstall ${FILESDIR}/icecat.desktop 644 usr/share/applications

	for i in 16x16 22x22 24x24 32x32 48x48 256x256; do
		vinstall ${wrksrc}/browser/branding/official/default${i%x*}.png 644 \
			usr/share/icons/hicolor/${i}/apps icecat.png
	done
	vinstall ${wrksrc}/browser/branding/official/default256.png 644 \
		usr/share/pixmaps icecat.png

	# Use system-provided dictionaries
	rm -rf ${DESTDIR}/usr/lib/icecat/{dictionaries,hyphenation}
	ln -s /usr/share/hunspell ${DESTDIR}/usr/lib/icecat/dictionaries
	ln -s /usr/share/hyphen ${DESTDIR}/usr/lib/icecat/hyphenation

	# https://bugzilla.mozilla.org/show_bug.cgi?id=658850
	ln -sf icecat ${DESTDIR}/usr/lib/icecat/icecat-bin

	# Remove the development files - noone uses them and the subpkg was broken
	rm -rf ${DESTDIR}/usr/{include,lib/icecat-devel,share/idl}
}
